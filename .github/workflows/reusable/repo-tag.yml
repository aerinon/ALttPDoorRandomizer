name: Tag Repository
description: Tags a repository

on:
  workflow_call:
    inputs:
      repo-owner:
        description: "Repository Owner"
        required: true
      repo-name:
        description: "Repository Name"
        required: true
      ref-name:
        description: "Reference name; branch, tag, etc"
        required: true
      github-tag:
        description: "Reference to tag with"
        required: true
    secrets:
      PAT:
        description: "Personal Access Token"
        required: true

runs:
  using: "composite"
  steps:
    - name: 🏷️Tag Repository
      shell: bash
      run: |
        echo "🏷️Tag Repository: ${{ inputs.repo-owner }}/${{ inputs.repo-name }}@${{ inputs.ref-name }}"
    - name: 🏷️Tag Repository
      uses: actions/github-script@v7.0.1
      with:
        github-token: ${{ secrets.PAT }}
        script: |
          // get latest commit
          const latestCommit = await github.rest.git.getRef({
            owner: '${{ inputs.repo-owner }}',
            repo: '${{ inputs.repo-name }}',
            ref: '${{ inputs.ref-name }}'
          })
          // get latest refs
          const latestRefs = await github.rest.git.listMatchingRefs({
            owner: '${{ inputs.repo-owner }}',
            repo: '${{ inputs.repo-name }}'
          })
          let latestTag = ''; // bucket for latest tag
          // get last tag in data
          for(let thisRef of latestRefs.data) {
            if(thisRef['ref'].indexOf('tags') > -1) {
              let refParts = thisRef['ref'].split('/');
              latestTag = refParts[-1];
            }
          }
          console.log('Repo Data: ', '${{ inputs.repo-owner }}/${{ inputs.repo-name }}@${{ inputs.ref-name }}')
          console.log('Git tag:   ', '${{ inputs.github-tag }}')
          console.log('Latest tag:', latestTag)
          if(latestTag != '${{ inputs.github-tag }}') {
            console.log(`Result:    🟢Creating '${{ inputs.github-tag }}' tag`)
            /*
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: repo,
              ref: 'refs/tags/${{ inputs.github-tag }}',
              sha: latestCommit.data.object.sha
            })
            */
          } else {
            console.log('Result:    🟡Not creating release tag')
          }
