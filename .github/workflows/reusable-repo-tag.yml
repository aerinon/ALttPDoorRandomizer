name: 🏷️Tag Repository

on:
  workflow_call:
    inputs:
      repo-owner:
        description: "Repository Owner"
        type: string
        required: true
      repo-name:
        description: "Repository Name"
        type: string
        required: true
      ref-name:
        description: "Reference name; branch, tag, etc"
        type: string
        required: true
      github-tag:
        description: "Reference to tag with"
        type: string
        required: true
    secrets:
      PAT:
        description: "Personal Access Token"
        required: true

jobs:
  tag-repo:
    name: 🏷️Tag Repository
    runs-on: ${{ matrix.os-name }}

    strategy:
      matrix:
        # CHECKME: OS List to run on
        os-name: [
          # ubuntu-latest,  # ubuntu-22.04
          ubuntu-22.04,
        ]

    steps:
      - name: 🏷️Tag Repository
        uses: actions/github-script@v7.0.1
        continue-on-error: true
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            // get git tag
            const gitTag = '${{ inputs.github-tag }}';
            console.log('Repo Data: ', '${{ inputs.repo-owner }}/${{ inputs.repo-name }}@${{ inputs.ref-name }}')
            console.log('Git tag:   ', gitTag)
            if(gitTag == '') {
              let msg = 'Result:    🔴No Git Tag sent, aborting!';
              console.log(msg)
              core.setFailed(msg)
              return 1
            }
            // get latest commit
            const latestCommit = await github.rest.git.getRef({
              owner: '${{ inputs.repo-owner }}',
              repo: '${{ inputs.repo-name }}',
              ref: '${{ inputs.ref-name }}'
            })
            // get latest refs
            const latestRefs = await github.rest.git.listMatchingRefs({
              owner: '${{ inputs.repo-owner }}',
              repo: '${{ inputs.repo-name }}'
            })
            let latestTag = ''; // bucket for latest tag
            // get last tag in data
            for(let thisRef of latestRefs.data) {
              if(thisRef['ref'].indexOf('tags') > -1) {
                let refParts = thisRef['ref'].split('/');
                latestTag = refParts[-1];
              }
            }
            console.log('Latest tag:', latestTag)
            if(latestTag != gitTag) {
              console.log(`Result:    🟢Creating '${{ inputs.github-tag }}' tag`)
              /*
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: repo,
                ref: 'refs/tags/${{ inputs.github-tag }}',
                sha: latestCommit.data.object.sha
              })
              */
            } else {
              console.log('Result:    🟡Not creating release tag')
            }
